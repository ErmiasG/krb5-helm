apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "kerberos.fullname" . }}-kdc-config
  labels:
    app: {{ template "kerberos.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: kdc
data:
  kdc.conf: |-
    [libdefaults]
       debug = true
    [logging]
       #kdc = FILE:/var/log/kerberos/krb5kdc.log
       kdc = CONSOLE
       admin_server = CONSOLE
    [kdcdefaults]
       kdc_ports = {{ .Values.kdc.udp.port }}
       kdc_tcp_ports = {{ .Values.kdc.tcp.port }}
       restrict_anonymous_to_tgt = {{ .Values.kdc.restrict_anonymous }}
       spake_preauth_kdc_challenge = {{ .Values.kdc.preauth_challenge }}
       default_realm = {{ .Values.krb5.default_realm | upper }}     
    [realms]
     {{ .Values.krb5.default_realm | upper }} = {
          database_name = /var/kerberos/krb5kdc/principal
          admin_keytab = FILE:/var/kerberos/krb5kdc/kadm5.keytab
          acl_file = /var/kerberos/krb5kdc/kadm5.acl
          key_stash_file = /var/kerberos/krb5kdc/stash

          kdc_ports = 749,88
          max_life = 10h 0m 0s
          max_renewable_life = 7d 0h 0m 0s
          master_key_type = aes128-cts
          #master_key_type = des3-hmac-sha1
          supported_enctypes = aes128-cts rc4-hmac des3-cbc-sha1 des-cbc-md5 des-cbc-crc
          #supported_enctypes = aes128-cts aes256-cts arcfour-hmac-md5 des3-hmac-sha1:normal des-cbc-crc:normal des:normal des:v4 des:norealm des:onlyrealm
          #supported_enctypes = aes256-cts:normal arcfour-hmac:normal des3-hmac-sha1:normal des-cbc-crc:normal des:normal des:v4 des:norealm des:onlyrealm des:afs3
          default_principal_flags = +preauth
     }
  kadm5.acl: |-
     # Allow full permissions to all admin principals in the EXAMPLE.AI realm
     */admin@{{ .Values.krb5.default_realm | upper }}    *

     # Allow read-only permissions to any other user in the EXAMPLE.AI realm (if needed)
     # This grants basic read access but no modification permissions.
     *     i
  acl.ldif: |-
     dn: olcDatabase={1}mdb,cn=config
     replace: olcAccess
     olcAccess: to attrs=userPassword,shadowLastChange,krbPrincipalKey by dn="cn=admin,{{ .Values.ldap.basedn }}" write by anonymous auth by self write by * none
     -
     add: olcAccess
     olcAccess: to dn.base="" by * read
     -
     add: olcAccess
     olcAccess: to * by dn="cn=admin,{{ .Values.ldap.basedn }}" write by * read
