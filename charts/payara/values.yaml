# Default values for payara.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

deployPayara: true
createPV: false

server:
  replicaCount: 1
  image:
    repository: payara-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 4848
  adminPassword: adminpw
  volumes:
    - name: server-configmap
      configMap:
        name: server-configmap
    # - name: asadmin-commands-persistent-storage
    #   persistentVolumeClaim:
    #     claimName: pv-claim-asadmin-commands
    # - name: asadmin-commands-persistent-storage
    #   hostPath:
    #     path: /var/local/payara/asadmin-commands.txt
    #     type: FileOrCreate
    # - name: krb5-conf
    #   configMap:
    #     name: server-krb5-config
    #     optional: false
    # - name: keytab-conf
    #   configMap:
    #     name: keytabs-configmap
    #     optional: false
    # - name: spnego-app-configmap
    #   configMap:
    #     name: spnego-app
  volumeMounts: 
    - name: server-configmap
      mountPath: "/opt/payara/k8s/commands/post-boot-commands.asadmin"
      subPath: post-boot-commands.asadmin
    - name: server-configmap
      mountPath: /opt/payara/scripts/init_2_change_password.sh
      subPath: init_2_change_password.sh
    - name: server-configmap
      mountPath: /opt/payara/scripts/init_3_krb_auth_module.sh
      subPath: init_3_krb_auth_module.sh
    # - name: server-configmap
    #   mountPath: /opt/payara/scripts/init_4_copy_asadmin_record.sh
    #   subPath: init_4_copy_asadmin_record.sh
    # - name: asadmin-commands-persistent-storage
    #   mountPath: /opt/payara/appserver/glassfish/domains/domain1/asadmin-commands.txt
    # - name: krb5-conf
    #   mountPath: /etc/krb5.conf
    #   subPath: krb5.conf
    # - name: keytab-conf
    #   mountPath: /etc/security/keytabs/service.keytab
    #   subPath: service.keytab
    # - name: spnego-app-configmap
    #   mountPath: /opt/payara/k8s/spnego.war
    #   subPath: spnego.war
node: 
  replicaCount: 2
  fullnameOverride: server
  image:
    repository: payara-node
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 28181
  volumes:
    - name: krb5-conf
      configMap:
        name: server-krb5-config
        optional: false
    - name: keytab-secret
      secret:
        secretName: keytab-secret
        optional: false
  volumeMounts: 
    - name: krb5-conf
      mountPath: /etc/krb5.conf
      subPath: krb5.conf
    - name: keytab-secret
      mountPath: /etc/security/keytabs/service.keytab
      subPath: service.keytab

ldap:
  factory_class: "com.sun.jndi.ldap.LdapCtxFactory"
  res_type: "javax.naming.ldap.LdapContext"
  jndilookupname: "dc=example,dc=com"
  property:
    security:
      authentication: "simple"
      principal: "cn=admin,dc=example,dc=com"
      credentials: "ldap-admin"
    referral: "ignore"
    #provider_url: "ldap://kerberos-release-payara-ldap.kerberos.svc.cluster.local:389"
    attributes_binary: "entryUUID"

principal:
  useLocalhost: false
keyTabPath: /etc/security/keytabs/service.keytab
keyTabName: service.keytab

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: true
  className: ""
  annotations:     
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  ingressClassName: nginx
  hosts:
    - host: hopsworks.ai.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 2000m
    memory: 2048Mi
  requests:
    cpu: 1000m
    memory: 1024Mi

nodeSelector: {}

tolerations: []

affinity: {}
